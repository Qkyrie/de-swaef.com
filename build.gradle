buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "1.3.4-SNAPSHOT"

group = 'qkyrie'

jar {
    group = 'com.de-swaef'
	baseName = 'website'
	version =  null
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task "forceTest" {
    dependsOn "clean", "cleanTest", "test"
}

task "fullBuild" {
    dependsOn "clean", "cleanTest", "test", "check", "build"
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.apache.commons:commons-lang3:3.0")
    compile("com.h2database:h2")
    testCompile('org.easytesting:fest-assert:1.4')
}

springBoot {
    executable = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}